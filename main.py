import discord
from discord.ext import commands
from dotenv import load_dotenv
import os
import json
import time

load_dotenv()
TOKEN = os.getenv("TOKEN")

intents = discord.Intents.all()
bot = commands.Bot(command_prefix="!rmc ", intents=intents)

SETTINGS_FILE = "settings.json"
RMC_EMBED_COLOR = 0x00ccff
COOLDOWN = 600

# ===================== –†–∞–±–æ—Ç–∞ —Å settings.json =====================
def load_settings():
    if not os.path.exists(SETTINGS_FILE):
        return {"star_channels": []}
    with open(SETTINGS_FILE, "r") as f:
        return json.load(f)

def save_settings(data):
    with open(SETTINGS_FILE, "w") as f:
        json.dump(data, f, indent=4)

##############################
settings = load_settings()
star_channel_ids = set(settings.get("star_channels", []))
admin_roles_ids = set(settings.get("admin_roles", []))
filter_channel_ids = set(settings.get("filter_channels", []))
filter_timeouts = settings.get("filter_timeout", {})
##############################

def update_star_channels():
    settings["star_channels"] = list(star_channel_ids)
    save_settings(settings)

def update_admin_roles():
    settings["admin_roles"] = list(admin_roles_ids)
    save_settings(settings)

def update_filter_channels():
    settings["filter_channels"] = list(filter_channel_ids)
    save_settings(settings)

def update_filter_timeouts():
    settings["filter_timeout"] = filter_timeouts
    save_settings(settings)

# ===================== –°–æ–±—ã—Ç–∏–µ –∑–∞–ø—É—Å–∫–∞ =====================
@bot.event
async def on_ready():
    print(f"–ë–æ—Ç {bot.user} –∑–∞–ø—É—â–µ–Ω!")

# ===================== –ò–≤–µ–Ω—Ç—ã =====================
async def handle_filter_violation(message):
    user_id_str = str(message.author.id)
    now = int(time.time())
    filter_timeouts = settings.setdefault("filter_timeout", {})
    last_violation = filter_timeouts.get(user_id_str, 0)

    has_attachments = bool(message.attachments)
    has_links = ("http://" in message.content) or ("https://" in message.content)

    if not has_attachments and not has_links:
        try:
            await message.delete()
            print(f"–£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {message.author} –≤ {message.channel.name} –±–µ–∑ –≤–ª–æ–∂–µ–Ω–∏–π –∏ —Å—Å—ã–ª–æ–∫")

            if now - last_violation >= COOLDOWN:
                filter_timeouts[user_id_str] = now
                update_filter_timeouts()

                embed = discord.Embed(
                    title="üìµ –¢–æ–ª—å–∫–æ –º–µ–¥–∏–∞-—Å–æ–æ–±—â–µ–Ω–∏—è!",
                    description="–≠—Ç–æ—Ç –∫–∞–Ω–∞–ª –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω **—Ç–æ–ª—å–∫–æ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, –≤–∏–¥–µ–æ –∏–ª–∏ —Å—Å—ã–ª–æ–∫**.\n\n"
                                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–π –æ–±—ã—á–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ –≤–ª–æ–∂–µ–Ω–∏–π.",
                    color=RMC_EMBED_COLOR
                )
                try:
                    await message.author.send(embed=embed)
                except discord.Forbidden:
                    print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –õ–° –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.author}")
        except discord.Forbidden:
            print(f"–ù–µ—Ç –ø—Ä–∞–≤ —É–¥–∞–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ {message.channel.name}")
        except discord.HTTPException as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")



@bot.event
async def on_message(message):
    if message.author.bot:
        return

    ### –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–∏ –≤ star-–∫–∞–Ω–∞–ª–µ ###
    if message.channel.id in star_channel_ids:
        try:
            await message.add_reaction("‚≠ê")
        except discord.Forbidden:
            print("–ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–∏")
        except discord.HTTPException as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ä–µ–∞–∫—Ü–∏–∏: {e}")

    ### –°–æ–∑–¥–∞–Ω–∏–µ –≤–µ—Ç–∫–∏ ###
        first_line = message.content.split('\n')[0]
        thread_name = first_line[:100] if first_line else f"–û–±—Å—É–∂–¥–µ–Ω–∏–µ {message.author.display_name}"    

        try:
            thread = await message.create_thread(
                name=thread_name,
                auto_archive_duration=1440
            )
            await thread.send(
                f"**–û–±—Å—É–∂–¥–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.author.display_name}**\n\n"
                "–ï—Å–ª–∏ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —Ä–∞–±–æ—Ç–∞, –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å —Ä–µ–∞–∫—Ü–∏—é ‚≠ê —á—Ç–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –∞–≤—Ç–æ—Ä–∞!"
            )
        except discord.Forbidden:
            print(f"–ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–µ—Ç–∫–∏ –≤ –∫–∞–Ω–∞–ª–µ {message.channel.name}")
        except discord.HTTPException as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤–µ—Ç–∫–∏: {e}")


    if message.channel.id in filter_channel_ids:
        if any(role.id in admin_roles_ids for role in message.author.roles):
            await bot.process_commands(message)
            return

        has_attachments = bool(message.attachments)
        has_links = ("http://" in message.content) or ("https://" in message.content)

        if not has_attachments and not has_links:
            await handle_filter_violation(message)
            return

    await bot.process_commands(message)




# ===================== –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è =====================

@bot.command(help="–î–æ–±–∞–≤–ª—è–µ—Ç –∫–∞–Ω–∞–ª –≤ ‚≠ê-—Å–ø–∏—Å–æ–∫")
@commands.has_permissions(manage_channels=True)
async def addstar(ctx, channel: discord.TextChannel): # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–Ω–∞–ª –≤ —Å–ø–∏—Å–æ–∫ –∑–≤—ë–∑–¥–æ—á–µ–∫
    star_channel_ids.add(channel.id)
    update_star_channels()
    await ctx.send(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –∫–∞–Ω–∞–ª: {channel.mention} –¥–ª—è ‚≠ê-—Å–ø–∏—Å–∫–∞")

@bot.command(help="–£–¥–∞–ª—è–µ—Ç –∫–∞–Ω–∞–ª –∏–∑ ‚≠ê-—Å–ø–∏—Å–∫–∞")
@commands.has_permissions(manage_channels=True)
async def removestar(ctx, channel: discord.TextChannel): # –£–¥–∞–ª—è–µ–º –∫–∞–Ω–∞–ª –∏–∑ —Å–ø–∏—Å–∫–∞ –∑–≤—ë–∑–¥–æ—á–µ–∫
    if channel.id in star_channel_ids:
        star_channel_ids.remove(channel.id)
        update_star_channels()
        await ctx.send(f"‚ùå –£–¥–∞–ª—ë–Ω –∫–∞–Ω–∞–ª: {channel.mention} –∏–∑ ‚≠ê-—Å–ø–∏—Å–∫–∞")
    else:
        await ctx.send(f"‚ö†Ô∏è –ö–∞–Ω–∞–ª {channel.mention} –Ω–µ –≤ ‚≠ê-—Å–ø–∏—Å–∫–µ")

@bot.command(help="–í—ã–≤–æ–¥–∏—Ç –≤—Å–µ –∫–∞–Ω–∞–ª—ã –≤ ‚≠ê-—Å–ø–∏—Å–∫–µ")
async def liststars(ctx): # –í—ã–≤–æ–¥–∏–º –∫–∞–Ω–∞–ª—ã —Å–æ –∑–≤—ë–¥–æ—á–∫–∞–º–∏
    if not star_channel_ids:
        await ctx.send("üì≠ –°–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤ –ø—É—Å—Ç.")
        return

    embed = discord.Embed(title="‚≠ê –ö–∞–Ω–∞–ª—ã —Å–æ –∑–≤—ë–∑–¥–Ω–æ–π —Ä–µ–∞–∫—Ü–∏–µ–π", color=discord.Color.gold())
    for cid in star_channel_ids:
        channel = bot.get_channel(cid)
        if channel:
            embed.add_field(name=channel.name, value=channel.mention, inline=False)
        else:
            embed.add_field(name="‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–∞–Ω–∞–ª", value=f"ID: {cid}", inline=False)

    await ctx.send(embed=embed)


@bot.command(help="–î–æ–±–∞–≤–ª—è–µ—Ç —Ä–æ–ª—å –≤ —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö")
@commands.has_permissions(administrator=True)
async def addadmin(ctx, role: discord.Role):
    admin_roles = settings.get("admin_roles", [])
    if role.id in admin_roles:
        await ctx.send(f"‚ö†Ô∏è –†–æ–ª—å {role.name} —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ.")
        return

    admin_roles.append(role.id)
    settings["admin_roles"] = admin_roles
    save_settings(settings)

    admin_roles_ids.add(role.id)

    await ctx.send(f"‚úÖ –†–æ–ª—å {role.name} –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö.")

@bot.command(help="–í—ã–≤–æ–¥–∏—Ç –≤—Å–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ä–æ–ª–∏")
async def listadmins(ctx):
    if not admin_roles_ids:
        await ctx.send("üì≠ –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Ä–æ–ª–µ–π –ø—É—Å—Ç.")
        return

    embed = discord.Embed(title="üíé –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ä–æ–ª–∏", color=RMC_EMBED_COLOR)
    for rid in admin_roles_ids:
        role = ctx.guild.get_role(rid)
        if role:
            embed.add_field(name=role.name, value=role.mention, inline=False)
        else:
            embed.add_field(name="‚ùì–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ä–æ–ª—å", value=f"ID: {rid}", inline=False)

    await ctx.send(embed=embed)

@bot.command(help="–£–¥–∞–ª—è–µ—Ç —Ä–æ–ª—å –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö")
@commands.has_permissions(administrator=True)
async def removeadmin(ctx, role: discord.Role):
    admin_roles = settings.get("admin_roles", [])
    if role.id not in admin_roles:
        await ctx.send(f"‚ö†Ô∏è –†–æ–ª—å {role.name} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å–ø–∏—Å–∫–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö.")
        return

    admin_roles.remove(role.id)
    settings["admin_roles"] = admin_roles
    save_settings(settings)

    admin_roles_ids.discard(role.id)

    await ctx.send(f"‚úÖ –†–æ–ª—å {role.name} —É–¥–∞–ª–µ–Ω–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö.")


@bot.command(help="–î–æ–±–∞–≤–ª—è–µ—Ç –∫–∞–Ω–∞–ª –≤ —Å–ø–∏—Å–æ–∫ —Ñ–∏–ª—å—Ç—Ä—É–µ–º—ã—Ö (—Ç–æ–ª—å–∫–æ –º–µ–¥–∏–∞)")
@commands.has_permissions(manage_channels=True)
async def addfilter(ctx, channel: discord.TextChannel):
    if channel.id in filter_channel_ids:
        await ctx.send(f"‚ö†Ô∏è –ö–∞–Ω–∞–ª {channel.mention} —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ.")
        return

    filter_channel_ids.add(channel.id)
    update_filter_channels()
    await ctx.send(f"‚úÖ –ö–∞–Ω–∞–ª {channel.mention} –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ —Ñ–∏–ª—å—Ç—Ä—É–µ–º—ã—Ö.")

@bot.command(help="–£–¥–∞–ª—è–µ—Ç –∫–∞–Ω–∞–ª –∏–∑ —Å–ø–∏—Å–∫–∞ —Ñ–∏–ª—å—Ç—Ä—É–µ–º—ã—Ö")
@commands.has_permissions(manage_channels=True)
async def removefilter(ctx, channel: discord.TextChannel):
    if channel.id not in filter_channel_ids:
        await ctx.send(f"‚ö†Ô∏è –ö–∞–Ω–∞–ª {channel.mention} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ.")
        return

    filter_channel_ids.remove(channel.id)
    update_filter_channels()
    await ctx.send(f"‚úÖ –ö–∞–Ω–∞–ª {channel.mention} —É–¥–∞–ª—ë–Ω –∏–∑ —Å–ø–∏—Å–∫–∞ —Ñ–∏–ª—å—Ç—Ä—É–µ–º—ã—Ö.")

@bot.command(help="–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ñ–∏–ª—å—Ç—Ä—É–µ–º—ã—Ö –∫–∞–Ω–∞–ª–æ–≤")
async def listfilters(ctx):
    if not filter_channel_ids:
        await ctx.send("üì≠ –°–ø–∏—Å–æ–∫ —Ñ–∏–ª—å—Ç—Ä—É–µ–º—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ –ø—É—Å—Ç.")
        return

    embed = discord.Embed(title="üìµ –§–∏–ª—å—Ç—Ä—É–µ–º—ã–µ –∫–∞–Ω–∞–ª—ã (—Ç–æ–ª—å–∫–æ –º–µ–¥–∏–∞)", color=RMC_EMBED_COLOR)
    for cid in filter_channel_ids:
        channel = bot.get_channel(cid)
        if channel:
            embed.add_field(name=channel.name, value=channel.mention, inline=False)
        else:
            embed.add_field(name="‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–∞–Ω–∞–ª", value=f"ID: {cid}", inline=False)

    await ctx.send(embed=embed)




bot.remove_command("help")
@bot.command(help="–í—ã–≤–æ–¥–∏—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã")
async def help(ctx):
    embed = discord.Embed(
        title="üõ†Ô∏è –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥",
        color=RMC_EMBED_COLOR
    )

    for command in bot.commands:
        if command.hidden:
            continue

        embed.add_field(
            name= f"!rmc {command.name}",
            value=command.help or "",
            inline=False
        )

    await ctx.send(embed=embed)

bot.run(TOKEN)
