import discord
from discord.ext import commands
from utils import settings_cache as settings
from constants import RMC_EMBED_COLOR


class StarChannels(commands.Cog):
    """Cog –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è ‚≠ê-–∫–∞–Ω–∞–ª–∞–º–∏ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ä–µ–∞–∫—Ü–∏–∏."""

    def __init__(self, bot: commands.Bot):
        self.bot = bot

    async def cog_check(self, ctx: commands.Context):
        data = settings.load_settings()
        admin_roles = data.get("admin_roles", [])

        if ctx.author.guild_permissions.administrator:
            return True
        if any(str(role.id) in admin_roles for role in ctx.author.roles):
            return True

        raise commands.CheckFailure()
        

    def update_star_channels(self, new_ids):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ ‚≠ê-–∫–∞–Ω–∞–ª–æ–≤ –≤ settings.json."""
        data = settings.load_settings()
        data["star_channels"] = list(new_ids)
        settings.save_settings(data)

    @commands.hybrid_command(
        name="addstar",
        with_app_command=True,
        description="–î–æ–±–∞–≤–ª—è–µ—Ç –∫–∞–Ω–∞–ª –≤ ‚≠ê-—Å–ø–∏—Å–æ–∫"
    )
    async def addstar(self, ctx, channel: discord.TextChannel = None):
        if channel is None:
            channel = ctx.channel

        data = settings.load_settings()
        star_channel_ids = set(data.get("star_channels", []))

        if channel.id in star_channel_ids:
            embed = discord.Embed(
                description=f"‚ö†Ô∏è –ö–∞–Ω–∞–ª {channel.mention} —É–∂–µ –≤ ‚≠ê-—Å–ø–∏—Å–∫–µ.",
                color=discord.Color.dark_gray()
            )
            await ctx.reply(
                embed=embed
            )
            return

        star_channel_ids.add(channel.id)
        self.update_star_channels(star_channel_ids)
        embed = discord.Embed(
            description=f"‚úÖ –ö–∞–Ω–∞–ª {channel.mention} –¥–æ–±–∞–≤–ª–µ–Ω –≤ ‚≠ê-—Å–ø–∏—Å–æ–∫.",
            color=discord.Color.green()
        )
        await ctx.reply(
            embed=embed
        )

    @commands.hybrid_command(
        name="removestar",
        with_app_command=True,
        description="–£–¥–∞–ª—è–µ—Ç –∫–∞–Ω–∞–ª –∏–∑ ‚≠ê-—Å–ø–∏—Å–∫–∞"
    )
    async def removestar(self, ctx, channel: discord.TextChannel = None):
        if channel is None:
            channel = ctx.channel

        data = settings.load_settings()
        star_channel_ids = set(data.get("star_channels", []))

        if channel.id not in star_channel_ids:
            embed = discord.Embed(
                description=f"‚ö†Ô∏è –ö–∞–Ω–∞–ª {channel.mention} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ ‚≠ê-—Å–ø–∏—Å–∫–µ.",
                color=discord.Color.dark_gray()
            )
            await ctx.reply(
                embed=embed
            )
            return

        star_channel_ids.remove(channel.id)
        self.update_star_channels(star_channel_ids)
        embed = discord.Embed(
            description=f"‚ùå –ö–∞–Ω–∞–ª {channel.mention} —É–¥–∞–ª—ë–Ω –∏–∑ ‚≠ê-—Å–ø–∏—Å–∫–∞.",
            color=discord.Color.dark_red()
        )
        await ctx.reply(
            embed=embed
        )

    @commands.hybrid_command(
        name="liststars",
        with_app_command=True,
        description="–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ –∫–∞–Ω–∞–ª—ã –≤ ‚≠ê-—Å–ø–∏—Å–∫–µ"
    )
    async def liststars(self, ctx):
        data = settings.load_settings()
        star_channel_ids = set(data.get("star_channels", []))

        if not star_channel_ids:
            embed = discord.Embed(
                description="üì≠ –°–ø–∏—Å–æ–∫ ‚≠ê-–∫–∞–Ω–∞–ª–æ–≤ –ø—É—Å—Ç.",
                color=discord.Color.dark_gray()
            )
            await ctx.reply(
                embed=embed
            )
            return

        embed = discord.Embed(title="‚≠ê –ö–∞–Ω–∞–ª—ã —Å–æ –∑–≤—ë–∑–¥–Ω–æ–π —Ä–µ–∞–∫—Ü–∏–µ–π", color=discord.Color.RMC_EMBED_COLOR)
        for cid in star_channel_ids:
            channel = self.bot.get_channel(cid)
            if channel:
                embed.add_field(name=channel.name, value=channel.mention, inline=False)
            else:
                embed.add_field(name="‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–∞–Ω–∞–ª", value=f"ID: {cid}", inline=False)

        await ctx.send(embed=embed)

    @commands.Cog.listener()
    async def on_message(self, message: discord.Message):
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ—Ç ‚≠ê –∏ —Å–æ–∑–¥–∞—ë—Ç –≤–µ—Ç–∫—É –≤ ‚≠ê-–∫–∞–Ω–∞–ª–∞—Ö."""
        if message.author.bot:
            return

        data = settings.load_settings()
        star_channel_ids = set(data.get("star_channels", []))

        if message.channel.id not in star_channel_ids:
            return

        # –†–µ–∞–∫—Ü–∏—è ‚≠ê
        try:
            await message.add_reaction("‚≠ê")
        except (discord.Forbidden, discord.HTTPException):
            pass

        # –°–æ–∑–¥–∞–Ω–∏–µ –≤–µ—Ç–∫–∏
        first_line = message.content.split('\n')[0]
        thread_name =  f"–û–±—Å—É–∂–¥–µ–Ω–∏–µ {message.author.display_name}"

        try:
            thread = await message.create_thread(
                name=thread_name,
                auto_archive_duration=4320  # 1 –¥–µ–Ω—å = 1440, —Å—á–∏—Ç–∞–µ—Ç—Å—è –≤ –º–∏–Ω—É—Ç–∞—Ö
            )
            await thread.send(
                f"**–û–±—Å—É–∂–¥–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.author.display_name}**\n\n"
                "–ï—Å–ª–∏ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —Ä–∞–±–æ—Ç–∞, –ø–æ—Å—Ç–∞–≤—å—Ç–µ —Ä–µ–∞–∫—Ü–∏—é ‚≠ê, —á—Ç–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –∞–≤—Ç–æ—Ä–∞!"
            )
        except discord.Forbidden:
            print(f"–ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–µ—Ç–∫–∏ –≤ –∫–∞–Ω–∞–ª–µ {message.channel.name}")
        except discord.HTTPException as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤–µ—Ç–∫–∏: {e}")


async def setup(bot: commands.Bot):
    await bot.add_cog(StarChannels(bot))
