import discord
from discord.ext import commands
from discord import app_commands
from utils import settings_cache as settings
import sys
import os
from constants import RMC_EMBED_COLOR

sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))


class Reports(commands.Cog):

    def __init__(self, bot: commands.Bot):
        self.bot = bot

    async def cog_check(self, ctx: commands.Context):
        data = settings.load_settings()
        admin_roles = data.get("admin_roles", [])

        if ctx.author.guild_permissions.administrator:
            return True
        if any(str(role.id) in admin_roles for role in ctx.author.roles):
            return True

        raise commands.CheckFailure()

    # ====== –†–∞–±–æ—Ç–∞ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ ======
    def update_report_channels(self, new_ids):
        data = settings.load_settings()

        data["report_channels"] = list(new_ids)
        settings.save_settings(data)

    # ====== –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞–º–∏ –¥–ª—è —Ä–µ–ø–æ—Ä—Ç–æ–≤ ======
    @commands.hybrid_command(
        name="addreport",
        with_app_command=True,  # —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –∫–∞–∫ slash
        description="–î–æ–±–∞–≤–ª—è–µ—Ç –∫–∞–Ω–∞–ª –≤ —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤, –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è —Ä–µ–ø–æ—Ä—Ç—ã"
    )
    @commands.has_permissions(manage_channels=True)
    async def addreport(self, ctx, channel: discord.TextChannel = None):
        if channel is None:
            channel = ctx.channel
        data = settings.load_settings()

        report_channel_ids = set(data.get("report_channels", []))

        if channel.id in report_channel_ids:
            embed = discord.Embed(
                description=f"‚ö†Ô∏è –ö–∞–Ω–∞–ª {channel.mention} —É–∂–µ –≤ —Å–ø–∏—Å–∫–µ —Ä–µ–ø–æ—Ä—Ç–æ–≤.",
                color=discord.Color.dark_gray()
            )
            await ctx.reply(
                embed=embed
            )
            return

        report_channel_ids.add(channel.id)
        self.update_report_channels(report_channel_ids)
        embed = discord.Embed(
            description=f"‚úÖ –ö–∞–Ω–∞–ª {channel.mention} –¥–æ–±–∞–≤–ª–µ–Ω –¥–ª—è —Ä–µ–ø–æ—Ä—Ç–æ–≤.",
            color=discord.Color.green()
        )
        await ctx.reply(
            embed=embed
        )

    @commands.hybrid_command(
        name="removereport",
        with_app_command=True,  # —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –∫–∞–∫ slash
        description="–£–¥–∞–ª—è–µ—Ç –∫–∞–Ω–∞–ª –∏–∑ —Å–ø–∏—Å–∫–∞ –∫–∞–Ω–∞–ª–æ–≤, –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è —Ä–µ–ø–æ—Ä—Ç—ã"
    )
    @commands.has_permissions(manage_channels=True)
    async def removereport(self, ctx, channel: discord.TextChannel = None):
        if channel is None:
            channel = ctx.channel

        data = settings.load_settings()

        report_channel_ids = set(data.get("report_channels", []))

        if channel.id not in report_channel_ids:
            embed = discord.Embed(
                description=f"‚ö†Ô∏è –ö–∞–Ω–∞–ª {channel.mention} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ —Ä–µ–ø–æ—Ä—Ç–æ–≤.",
                color=discord.Color.dark_gray()
            )
            await ctx.reply(
                embed=embed
            )
            return

        report_channel_ids.remove(channel.id)
        self.update_report_channels(report_channel_ids)
        embed = discord.Embed(
            description=f"‚ùå –ö–∞–Ω–∞–ª {channel.mention} —É–¥–∞–ª—ë–Ω –∏–∑ —Ä–µ–ø–æ—Ä—Ç–æ–≤.",
            color=discord.Color.dark_red()
        )
        await ctx.reply(
            embed=embed
        )

    @commands.hybrid_command(
        name="listreports",
        with_app_command=True,  # —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –∫–∞–∫ slash
        description="–°–ø–∏—Å–æ–∫ —Ä–µ–ø–æ—Ä—Ç-–∫–∞–Ω–∞–ª–æ–≤"
    )
    async def listreports(self, ctx):
        data = settings.load_settings()

        report_channel_ids = set(data.get("report_channels", []))

        if not report_channel_ids:
            embed = discord.Embed(
                description="üì≠ –°–ø–∏—Å–æ–∫ —Ä–µ–ø–æ—Ä—Ç-–∫–∞–Ω–∞–ª–æ–≤ –ø—É—Å—Ç.",
                color=discord.Color.dark_gray()
            )
            await ctx.reply(
                embed=embed
            )
            return

        embed = discord.Embed(title="üö® –ö–∞–Ω–∞–ª—ã –¥–ª—è —Ä–µ–ø–æ—Ä—Ç–æ–≤", color=RMC_EMBED_COLOR)
        for cid in report_channel_ids:
            channel = self.bot.get_channel(cid)
            if channel:
                embed.add_field(name=channel.name, value=channel.mention, inline=False)
            else:
                embed.add_field(name="‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–∞–Ω–∞–ª", value=f"ID: {cid}", inline=False)
        await ctx.send(embed=embed)

    # ====== –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –º–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–ø–æ—Ä—Ç–∞ ======
    async def send_report(self, guild: discord.Guild, reporter: discord.Member,
                          target_message: discord.Message, reason: str):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ embed-–∞ —Å –∂–∞–ª–æ–±–æ–π –≤ —Ä–µ–ø–æ—Ä—Ç-–∫–∞–Ω–∞–ª—ã"""
        data = settings.load_settings()

        report_channel_ids = set(data.get("report_channels", []))
        admin_roles_ids = set(data.get("admin_roles", []))

        if not report_channel_ids:
            print("–ù–µ –º–æ–≥—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–ø–æ—Ä—Ç ‚Äî –Ω–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤!")
            return

        admin_mentions = " ".join(
            role.mention
            for rid in admin_roles_ids
            if (role := guild.get_role(rid))
        ) or "‚ö†Ô∏è (–ù–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –∞–¥–º–∏–Ω-—Ä–æ–ª–µ–π)"

        embed = discord.Embed(
            title="üö® –ù–æ–≤—ã–π —Ä–µ–ø–æ—Ä—Ç",
            color=discord.Color.red()
        )
        embed.add_field(name="–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –∂–∞–ª–æ–±—ã", value=reporter.mention, inline=False)
        embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞", value=reason or "‚Äî", inline=False)
        embed.add_field(name="–°–æ–æ–±—â–µ–Ω–∏–µ", value=f"[–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é]({target_message.jump_url})", inline=False)
        embed.set_footer(text=f"–ê–≤—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è: {target_message.author} ({target_message.author.id})")

        for cid in report_channel_ids:
            if channel := guild.get_channel(cid):
                await channel.send(admin_mentions, embed=embed)


# ====== –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —É–∫–∞–∑–∞–Ω–∏—è –ø—Ä–∏—á–∏–Ω—ã ======
class ReportReasonModal(discord.ui.Modal, title="–û—Ç–ø—Ä–∞–≤–∫–∞ –∂–∞–ª–æ–±—ã"):
    def __init__(self, cog: Reports, target_message: discord.Message):
        super().__init__()
        self.cog = cog
        self.target_message = target_message

        self.reason = discord.ui.TextInput(
            label="–ü—Ä–∏—á–∏–Ω–∞ –∂–∞–ª–æ–±—ã",
            style=discord.TextStyle.paragraph,
            placeholder="–û–ø–∏—à–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –∂–∞–ª–æ–±—ã...",
            required=False,
            max_length=500
        )
        self.add_item(self.reason)

    async def on_submit(self, interaction: discord.Interaction):
        await self.cog.send_report(
            interaction.guild, interaction.user, self.target_message, str(self.reason)
        )
        await interaction.response.send_message("‚úÖ –†–µ–ø–æ—Ä—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.", ephemeral=True)


# ====== Context-menu (Message) ======
@app_commands.context_menu(name="–ü–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è")
async def context_report(interaction: discord.Interaction, message: discord.Message):
    cog: Reports | None = interaction.client.get_cog("Reports")
    if cog is None:
        await interaction.response.send_message("–û—à–∏–±–∫–∞: Reports cog –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω.", ephemeral=True)
        return

    await interaction.response.send_modal(ReportReasonModal(cog, message))


async def setup(bot: commands.Bot):
    reports_cog = Reports(bot)
    await bot.add_cog(reports_cog)

    try:
        bot.tree.add_command(context_report)
    except Exception:
        pass
