import discord
import xml.etree.ElementTree as ET
from typing import Optional
from discord import app_commands
from discord.ext import commands
from wand.image import Image
from utils import settings_cache as settings
from constants import RMC_EMBED_COLOR

SVG_FILE = "map.svg"
PNG_FILE = "map.png"



def get_country_names():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω."""
    tree = ET.parse(SVG_FILE)
    root = tree.getroot()
    countries = []

    for path in root.findall(".//{http://www.w3.org/2000/svg}path"):
        country_class = path.attrib.get("id")
        if country_class:
            countries.append(country_class.strip())
    return countries


COUNTRIES = list({c.strip() for c in get_country_names()})

def update_svg(country_name: str, color: str):
    if not country_name:
        return False  # —Å—Ä–∞–∑—É –≤—ã—Ö–æ–¥–∏–º, –µ—Å–ª–∏ None

    tree = ET.parse(SVG_FILE)
    root = tree.getroot()
    found = False

    for path in root.findall(".//{http://www.w3.org/2000/svg}path"):
        country_class = path.attrib.get("id")
        if country_class and country_class.strip() == country_name:
            path.attrib["fill"] = color
            found = True

    if found:
        tree.write(SVG_FILE, encoding="utf-8", xml_declaration=True)
        return True
    return False




def svg_to_png(svg_path: str, png_path: str):
    """–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è SVG –≤ PNG —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Wand."""
    try:
        from wand.image import Image
        with Image(filename=svg_path) as img:
            img.format = 'png'
            img.save(filename=png_path)
        return True
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ SVG: {e}")
        return False

async def country_autocomplete(interaction: discord.Interaction, current: str) -> list[app_commands.Choice[str]]:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤–∞—Ä–∏–∞–Ω—Ç—ã —Å—Ç—Ä–∞–Ω –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–Ω–ø—É—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    return [
        app_commands.Choice(name=country, value=country)
        for country in COUNTRIES
        if current.lower() in country.lower()
    ][:25]

class Map(commands.Cog):
    """Cog –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–∞—Ä—Ç—ã."""

    def __init__(self, bot: commands.Bot):
        self.bot = bot

    @commands.hybrid_command(
        name="map",
        with_app_command=True,
        description="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ä—Ç—É —Å–µ—Ä–≤–µ—Ä–∞."
    )
    @app_commands.describe(
        map_type="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å –∫–∞—Ä—Ç–æ–π.",
        country_name="–ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã (—Ç–æ–ª—å–∫–æ –¥–ª—è add/remove)"
    )
    @app_commands.choices(map_type=[
        app_commands.Choice(name="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â—É—é –∫–∞—Ä—Ç—É", value="show"),
        app_commands.Choice(name="–î–æ–±–∞–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω—É", value="add"),
        app_commands.Choice(name="–£–±—Ä–∞—Ç—å —Å—Ç—Ä–∞–Ω—É", value="remove")
    ])
    @app_commands.autocomplete(country_name=country_autocomplete)
    async def map(
        self, 
        ctx: commands.Context, 
        map_type: Optional[str] = None, 
        country_name: Optional[str] = None
    ):
        """–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ä—Ç—É —Å–µ—Ä–≤–µ—Ä–∞"""
        data = settings.load_settings()
        admin_roles = data.get("admin_roles", [])
        user_roles = [role.id for role in ctx.author.roles]
        is_admin = any(role_id in user_roles for role_id in admin_roles)
        if map_type == "show":
            if svg_to_png(SVG_FILE, PNG_FILE):
                file = discord.File(PNG_FILE, filename="map.png")
                embed = discord.Embed(
                    title="üó∫ –¢–µ–∫—É—â–∞—è –∫–∞—Ä—Ç–∞",
                    color=RMC_EMBED_COLOR,
                    timestamp=discord.utils.utcnow()
                )
                embed.set_image(url="attachment://map.png")
                embed.set_footer(text="–ö–∞—Ä—Ç–∞ —Å—Ç—Ä–∞–Ω —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –†–ú–ö.")
                await ctx.send(embed=embed, file=file)
            else:
                await ctx.send("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–∞—Ä—Ç—ã. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ImageMagick.")
        elif is_admin is True:
            if map_type == "add" and country_name and is_admin:
                if update_svg(country_name, "#FF0000"): 
                    svg_to_png(SVG_FILE, PNG_FILE)
                    file = discord.File(PNG_FILE, filename="map.png")
                    embed = discord.Embed(
                        title="üó∫ –û–±–Ω–æ–≤–ª—ë–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –∫–∞—Ä—Ç—ã",
                        color=RMC_EMBED_COLOR,
                        timestamp=discord.utils.utcnow()
                    )
                    embed.set_image(url="attachment://map.png")
                    embed.set_footer(text="–û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–µ–π –∫–∞—Ä—Ç—ã –º–æ–∂–Ω–æ –ø–æ –∫–æ–º–∞–Ω–¥–µ !rmc map show")
                    await ctx.send(
                        content=f"‚úÖ `{country_name}` –¥–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–∞ –∫–∞—Ä—Ç—É.",
                        embed=embed,
                        file=file   # –≤–æ—Ç —ç—Ç–æ –¥–æ–±–∞–≤—å
                    )
                else: 
                    await ctx.send(f"‚ùå –°—Ç—Ä–∞–Ω–∞ `{country_name}` –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –∫–∞—Ä—Ç–µ.")
            elif map_type == "remove" and country_name:
                if update_svg(country_name, "#d1dbdd"):
                    svg_to_png(SVG_FILE, PNG_FILE)
                    file = discord.File(PNG_FILE, filename="map.png")
                    embed = discord.Embed(
                        title="üó∫ –û–±–Ω–æ–≤–ª—ë–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –∫–∞—Ä—Ç—ã",
                        color=RMC_EMBED_COLOR,
                        timestamp=discord.utils.utcnow()
                    )
                    embed.set_footer(text="–û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–µ–π –∫–∞—Ä—Ç—ã –º–æ–∂–Ω–æ –ø–æ –∫–æ–º–∞–Ω–¥–µ !rmc map show")
                    embed.set_image(url="attachment://map.png")
                    await ctx.send(
                        content=f"‚úÖ `{country_name}` —É–±—Ä–∞–Ω–∞ —Å –∫–∞—Ä—Ç—ã.",
                        embed=embed,
                        file=file   # –≤–æ—Ç —ç—Ç–æ –¥–æ–±–∞–≤—å
                    )
                else:
                    await ctx.send(f"‚ùå –°—Ç—Ä–∞–Ω–∞ `{country_name}` –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –∫–∞—Ä—Ç–µ.")
            else:
                await ctx.send("‚ö† –ù–µ–≤–µ—Ä–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã. –ü—Ä–æ–≤–µ—Ä—å –∞—Ä–≥—É–º–µ–Ω—Ç—ã.")
        else:
            await ctx.send("<:declined:1422601837370146969> –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–∞—Ä—Ç—ã.")

async def setup(bot: commands.Bot):
    await bot.add_cog(Map(bot))