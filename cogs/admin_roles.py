import discord
from discord.ext import commands
from utils import settings_cache as settings




class AdminSettings(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    async def cog_check(self, ctx: commands.Context):
        data = settings.load_settings()
        admin_roles = data.get("admin_roles", [])

        if ctx.author.guild_permissions.administrator:
            return True 
        if any(str(role.id) in admin_roles for role in ctx.author.roles):
            return True

        raise commands.CheckFailure("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞ –∫–æ–º–∞–Ω–¥. –ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ —ç—Ç–æ –æ—à–∏–±–∫–æ–π, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.")


    def update_admin_roles(self, new_roles):
        data = settings.load_settings()

        data["admin_roles"] = list(new_roles)
        settings.save_settings(data)

    @commands.hybrid_command(
        name="addadmin",
        with_app_command=True,
        description="–î–æ–±–∞–≤–ª—è–µ—Ç —Ä–æ–ª—å –≤ —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö"
    )
    async def addadmin(self, ctx, role: discord.Role):
        data = settings.load_settings()

        admin_roles_ids = set(data.get("admin_roles", []))
        if role.id in admin_roles_ids:
            await ctx.send(f"‚ö†Ô∏è –†–æ–ª—å {role.name} —É–∂–µ –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ.")
            return
        admin_roles_ids.add(role.id)
        self.update_admin_roles(admin_roles_ids)
        await ctx.send(f"‚úÖ –†–æ–ª—å {role.name} –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö.")

    @commands.hybrid_command(
        name="removeadmin",
        with_app_command=True,
        description="–£–¥–∞–ª—è–µ—Ç —Ä–æ–ª—å –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö"
    )
    async def removeadmin(self, ctx, role: discord.Role):
        data = settings.load_settings()

        admin_roles_ids = set(data.get("admin_roles", []))
        if role.id not in admin_roles_ids:
            await ctx.send(f"‚ö†Ô∏è –†–æ–ª—å {role.name} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
            return
        admin_roles_ids.remove(role.id)
        self.update_admin_roles(admin_roles_ids)
        await ctx.send(f"‚úÖ –†–æ–ª—å {role.name} —É–¥–∞–ª–µ–Ω–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö.")

    @commands.hybrid_command(
        name="listadmins",
        with_app_command=True,
        description="–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ä–æ–ª–∏"
    )
    async def listadmins(self, ctx):
        data = settings.load_settings()

        admin_roles_ids = set(data.get("admin_roles", []))
        if not admin_roles_ids:
            await ctx.send("üì≠ –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Ä–æ–ª–µ–π –ø—É—Å—Ç.")
            return
        embed = discord.Embed(title="üíé –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ä–æ–ª–∏", color=0x00ccff)
        for rid in admin_roles_ids:
            role = ctx.guild.get_role(rid)
            embed.add_field(name=role.name if role else "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ä–æ–ª—å",
                            value=role.mention if role else f"ID: {rid}",
                            inline=False)
        await ctx.send(embed=embed)


async def setup(bot):
    await bot.add_cog(AdminSettings(bot))
