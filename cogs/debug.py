from discord.ext import commands
import discord
import time
from utils import settings_cache as settings

class Debug(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    async def cog_check(self, ctx: commands.Context):
        data = settings.load_settings()
        admin_roles = data.get("admin_roles", [])

        if ctx.author.guild_permissions.administrator:
            return True
        if any(str(role.id) in admin_roles for role in ctx.author.roles):
            return True

        raise commands.CheckFailure("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞ –∫–æ–º–∞–Ω–¥. –ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ —ç—Ç–æ –æ—à–∏–±–∫–æ–π, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.")

    @commands.hybrid_command(name="ping", with_app_command=True, description="–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–æ—Ç–∞ –∏ –≤—ã–≤–æ–¥ –æ—à–∏–±–æ–∫")
    async def ping(self, ctx: commands.Context):
        latency_ms = round(self.bot.latency * 1000)

        embed = discord.Embed(title="üì° Ping", color=discord.Color.green())
        embed.add_field(name="–ó–∞–¥–µ—Ä–∂–∫–∞", value=f"{latency_ms} ms", inline=False)

        # –û—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–≥–æ–≤
        if getattr(self.bot, "load_errors", []):
            errors_text = "\n".join(self.bot.load_errors)
            embed.add_field(name="‚ö† –û—à–∏–±–∫–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–≥–æ–≤", value=f"```{errors_text}```", inline=False)

        # –ü–æ—Å–ª–µ–¥–Ω—è—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞
        if getattr(self.bot, "last_critical_error", None):
            embed.add_field(name="üí• –ü–æ—Å–ª–µ–¥–Ω—è—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞", 
                            value=f"```{self.bot.last_critical_error[-1000:]}```",  # –æ–±—Ä–µ–∑–∫–∞ –¥–æ 1000 —Å–∏–º–≤–æ–ª–æ–≤
                            inline=False)

        await ctx.send(embed=embed)

async def setup(bot):
    await bot.add_cog(Debug(bot))
