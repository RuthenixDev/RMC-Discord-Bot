import discord
from discord.ext import commands
from utils import settings_cache as settings
import time
from constants import RMC_EMBED_COLOR

COOLDOWN = 600

class FilterChannels(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot

    async def cog_check(self, ctx: commands.Context):
        data = settings.load_settings()
        admin_roles = data.get("admin_roles", [])

        if ctx.author.guild_permissions.administrator:
            return True
        if any(str(role.id) in admin_roles for role in ctx.author.roles):
            return True

        raise commands.CheckFailure("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞ –∫–æ–º–∞–Ω–¥. –ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ —ç—Ç–æ –æ—à–∏–±–∫–æ–π, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.")

    def update_filter_channels(self, new_ids):
        data = settings.load_settings()

        data["filter_channels"] = list(new_ids)
        settings.save_settings(data)

    def update_filter_timeouts(self, filter_timeouts):
            data = settings.load_settings()

            data["filter_timeout"] = filter_timeouts
            settings.save_settings(data)


    @commands.hybrid_command(
        name="addfilter",
        with_app_command=True,
        description="–î–æ–±–∞–≤–ª—è–µ—Ç –∫–∞–Ω–∞–ª –≤ —Å–ø–∏—Å–æ–∫ –æ–Ω–ª–∏-–º–µ–¥–∏–∞ –∫–∞–Ω–∞–ª–æ–≤"
    )
    async def addfilter(self, ctx, channel: discord.TextChannel = None):
        if channel is None:
            channel = ctx.channel

        data = settings.load_settings()
        filter_channel_ids: set[int] = set(data.get("filter_channels", []))

        if channel.id in filter_channel_ids:
            embed = discord.Embed(
                description=f"‚ö†Ô∏è –ö–∞–Ω–∞–ª {channel.mention} —É–∂–µ –≤ —Å–ø–∏—Å–∫–µ —Ñ–∏–ª—å—Ç—Ä—É–µ–º—ã—Ö.",
                color=discord.Color.dark_gray()
            )
            await ctx.reply(
                embed=embed
            )
            return
        
        filter_channel_ids.add(channel.id)
        self.update_filter_channels(filter_channel_ids)
        embed = discord.Embed(
            description=f"‚úÖ –ö–∞–Ω–∞–ª {channel.mention} –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ —Ñ–∏–ª—å—Ç—Ä—É–µ–º—ã—Ö.",
            color=discord.Color.green()
        )
        await ctx.reply(
            embed=embed
        )

    @commands.hybrid_command(
        name="removefilter",
        with_app_command=True,
        description="–£–¥–∞–ª—è–µ—Ç –∫–∞–Ω–∞–ª –∏–∑ —Å–ø–∏—Å–∫–∞ –æ–Ω–ª–∏-–º–µ–¥–∏–∞ –∫–∞–Ω–∞–ª–æ–≤"
    )
    async def removefilter(self, ctx, channel: discord.TextChannel = None):
        if channel is None:
            channel = ctx.channel
            
        data = settings.load_settings()
        filter_channel_ids: set[int] = set(data.get("filter_channels", []))

        if channel.id not in filter_channel_ids:
            embed = discord.Embed(
                description=f"‚ö†Ô∏è –ö–∞–Ω–∞–ª {channel.mention} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ —Ñ–∏–ª—å—Ç—Ä—É–µ–º—ã—Ö.",
                color=discord.Color.dark_gray()
            )
            await ctx.reply(
                embed=embed
            )
            return
        filter_channel_ids.remove(channel.id)
        self.update_filter_channels(filter_channel_ids)
        embed = discord.Embed(
            description=f"‚ùå –ö–∞–Ω–∞–ª {channel.mention} —É–¥–∞–ª—ë–Ω –∏–∑ —Å–ø–∏—Å–∫–∞ —Ñ–∏–ª—å—Ç—Ä—É–µ–º—ã—Ö.",
            color=discord.Color.dark_red()
        )
        await ctx.reply(
            embed=embed
        )

    @commands.hybrid_command(
        name="listfilters",
        with_app_command=True,
        description="–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –æ–Ω–ª–∏-–º–µ–¥–∏–∞ –∫–∞–Ω–∞–ª–æ–≤"
    )
    async def listfilters(self, ctx):
        data = settings.load_settings()
        filter_channel_ids: set[int] = set(data.get("filter_channels", []))

        if not filter_channel_ids:
            embed = discord.Embed(
                description="üì≠ –°–ø–∏—Å–æ–∫ —Ñ–∏–ª—å—Ç—Ä—É–µ–º—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ –ø—É—Å—Ç.",
                color=discord.Color.dark_gray()
            )
            await ctx.reply(
                embed=embed
            )
            return

        embed = discord.Embed(title="üìµ –§–∏–ª—å—Ç—Ä—É–µ–º—ã–µ –∫–∞–Ω–∞–ª—ã", color=RMC_EMBED_COLOR)
        for cid in filter_channel_ids:
            channel = self.bot.get_channel(cid)
            if channel:
                embed.add_field(name=channel.name, value=channel.mention, inline=False)
            else:
                embed.add_field(name="‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–∞–Ω–∞–ª", value=f"ID: {cid}", inline=False)

        await ctx.send(embed=embed)

    @commands.Cog.listener()
    async def on_message(self, message: discord.Message):
        if message.author.bot:
            return

        data = settings.load_settings()
        filter_channel_ids: set[int] = set(data.get("filter_channels", []))

        user_id_str = str(message.author.id)
        now = int(time.time())
        filter_timeouts = data.get("filter_timeouts", {})

        last_violation = filter_timeouts.get(user_id_str, 0)

        has_attachments = bool(message.attachments)
        has_links = ("http://" in message.content) or ("https://" in message.content)

        if message.channel.id not in filter_channel_ids:
            return

        if not has_attachments and not has_links:
            try:
                await message.delete()
                print(f"–£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {message.author} –≤ {message.channel.name} –±–µ–∑ –≤–ª–æ–∂–µ–Ω–∏–π –∏ —Å—Å—ã–ª–æ–∫")

                if now - last_violation >= COOLDOWN:
                    filter_timeouts[user_id_str] = now
                    self.update_filter_timeouts(filter_timeouts)

                    embed = discord.Embed(
                        title="üìµ –¢–æ–ª—å–∫–æ –º–µ–¥–∏–∞-—Å–æ–æ–±—â–µ–Ω–∏—è!",
                        description="–≠—Ç–æ—Ç –∫–∞–Ω–∞–ª –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω **—Ç–æ–ª—å–∫–æ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, –≤–∏–¥–µ–æ –∏–ª–∏ —Å—Å—ã–ª–æ–∫**.\n\n"
                                    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–π –æ–±—ã—á–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ –≤–ª–æ–∂–µ–Ω–∏–π.",
                        color=RMC_EMBED_COLOR
                    )
                    try:
                        await message.author.send(embed=embed)
                    except discord.Forbidden:
                        print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –õ–° –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.author}")
            except discord.Forbidden:
                print(f"–ù–µ—Ç –ø—Ä–∞–≤ —É–¥–∞–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ {message.channel.name}")
            except discord.HTTPException as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")


async def setup(bot):
    await bot.add_cog(FilterChannels(bot))